apiVersion: v1
kind: Pod
metadata:
  name: {{ .Values.pod.name | quote }}
  namespace: tenant1
  labels: 
     app: superset
spec:
  restartPolicy: {{ .Values.pod.restartPolicy | quote }}
  containers:
#   - name: init-container1
#     image: alpine:latest
#     command: ["sh", "-c", "until nc -zv localhost 5432 && nc -zv localhost 6379; do echo 'Waiting for database and Redis...'; sleep 1; done && sleep 10"]
#   - name: {{ .Values.redisContainer.name | quote }}
#     image: {{ .Values.redisContainer.image | quote }}
#     imagePullPolicy: {{ .Values.redisContainer.imagePullPolicy | quote }}
#     env:
# {{- range $key, $value := .Values.configMapdata.redis }}
#       - name: {{ $key | upper | replace "-" "_" }}
#         value: {{ $value | quote }}
# {{- end }}
#     volumeMounts:
#       - name: redis
#         mountPath: /data  
  - name: {{ .Values.databaseContainer.name | quote }}
    image: {{ .Values.databaseContainer.image | quote }}
    imagePullPolicy: {{ .Values.databaseContainer.imagePullPolicy | quote }}
    env:
      - name: DB_USERNAME
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-user
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-password
      - name: SUPERSET_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: app-secretkey
{{- range $key, $value := .Values.configMapdata.database }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.redis }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.app }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
    volumeMounts:
      - name: db-home
        mountPath: /var/lib/postgresql/data
      - name: db-config-volume 
        mountPath: /app/docker/docker-entrypoint-initdb.d
# #   - name: {{ .Values.superset_initcontainer.name | quote }}
# #     image: {{ .Values.superset_initcontainer.image | quote }}
# #     imagePullPolicy: {{ .Values.superset_initcontainer.imagePullPolicy | quote }}
# #     command: ["/app/docker/docker-init.sh"]
# #     securityContext:
# #       runAsUser: 0
# #     env:
# # {{- range $key, $value := .Values.configMapdata.database }}
# #       - name: {{ $key | upper | replace "-" "_" }}
# #         value: {{ $value | quote }}
# # {{- end }}
# # {{- range $key, $value := .Values.configMapdata.redis }}
# #       - name: {{ $key | upper | replace "-" "_" }}
# #         value: {{ $value | quote }}
# # {{- end }}
# # {{- range $key, $value := .Values.configMapdata.app }}
# #       - name: {{ $key | upper | replace "-" "_" }}
# #         value: {{ $value | quote }}
# # {{- end }}
# #       - name: DB_USERNAME
# #         valueFrom:
# #           secretKeyRef:
# #             name: db-app-credentials
# #             key: db-user
# #       - name: POSTGRES_PASSWORD
# #         valueFrom:
# #           secretKeyRef:
# #             name: db-app-credentials
# #             key: db-password
# #       - name: SUPERSET_SECRET_KEY
# #         valueFrom:
# #           secretKeyRef:
# #             name: db-app-credentials
# #             key: app-secretkey
#     volumeMounts:
#       - name: superset-home
#         mountPath: /app/superset_home
#       - name: config-volume
#         mountPath: /app/docker
    # readinessProbe: 
    #   exec:
    #     command:
    #     - /bin/sh
    #     - -c
    #     - exit 0
    # livenessProbe: 
    #     exec:
    #       command:
    #       - /bin/sh
    #       - -c
    #       - exit 0    
  - name: {{ .Values.supersetContainer.name | quote }}
    image: {{ .Values.supersetContainer.image | quote }}
    imagePullPolicy: {{ .Values.supersetContainer.imagePullPolicy | quote }}
    ports:
      - containerPort: {{ .Values.supersetContainer.port }}
    command: ["/app/docker/docker-bootstrap.sh", "app-gunicorn"]
    securityContext:
      runAsUser: 0
    env:
{{- range $key, $value := .Values.configMapdata.database }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.redis }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.app }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
      - name: DB_USERNAME
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-user
      - name: DB_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-password
      - name: SUPERSET_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: app-secretkey
    volumeMounts:
      - name: superset-home
        mountPath: /app/superset_home
      - name: config-volume
        mountPath: /app/docker
  - name: {{ .Values.superset_workercontainer.name | quote }}
    image: {{ .Values.superset_workercontainer.image | quote }}
    imagePullPolicy: {{.Values.superset_workercontainer.imagePullPolicy | quote }}
    command: ["/app/docker/docker-bootstrap.sh", "worker"]
    securityContext:
      runAsUser: 0
    env:
{{- range $key, $value := .Values.configMapdata.database }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.redis }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.app }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
      - name: DB_USERNAME
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-user
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-password
      - name: SUPERSET_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: app-secretkey
    volumeMounts:
      - name: superset-home
        mountPath: /app/superset_home
      - name: config-volume
        mountPath: /app/docker
    # livenessProbe:
    #   exec:
    #     command:
    #     - pgrep
    #     - -f
    #     - celery
    # readinessProbe:
    #   exec:
    #     command:
    #     - /bin/sh
    #     - -c
    #     - exit 0     
  - name: {{ .Values.superset_worker_beatcontainer.name | quote }}
    image: {{ .Values.superset_worker_beatcontainer.image | quote }}
    imagePullPolicy: {{ .Values.superset_worker_beatcontainer.imagePullPolicy | quote }}
    command: ["/app/docker/docker-bootstrap.sh", "beat"]
    securityContext:
      runAsUser: 0
    env:
{{- range $key, $value := .Values.configMapdata.database }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.redis }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
{{- range $key, $value := .Values.configMapdata.app }}
      - name: {{ $key | upper | replace "-" "_" }}
        value: {{ $value | quote }}
{{- end }}
      - name: DB_USERNAME
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-user
      - name: POSTGRES_PASSWORD
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: db-password
      - name: SUPERSET_SECRET_KEY
        valueFrom:
          secretKeyRef:
            name: db-app-credentials
            key: app-secretkey
    volumeMounts:
      - name: superset-home
        mountPath: /app/superset_home
      - name: config-volume
        mountPath: /app/docker
    # livenessProbe:
    #   exec:
    #     command:
    #     - /bin/sh
    #     - -c
    #     - exit 0
    # readinessProbe:
    #    exec:
    #      command:
    #      - /bin/sh
    #      - -c
    #      - exit 0
  imagePullSecrets:
  - name: awsecr-cred
  volumes:
    - name: redis
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.redis.name | quote }}
    - name: db-home
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.database.name | quote }}
    - name: superset-home
      persistentVolumeClaim:
        claimName: {{ .Values.pvc.superset.name | quote }}
    - name: config-volume
      configMap:
         name: mnt-config  
         defaultMode: 0777
    - name: db-config-volume
      configMap:
         name: mnt-config-2
         defaultMode: 0777
