apiVersion: v1
data:
  docker-bootstrap.sh: |+
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    set -eo pipefail

    REQUIREMENTS_LOCAL="/app/docker/requirements-local.txt"
    # If Cypress run – overwrite the password for admin and export env variables
    if [ "$CYPRESS_CONFIG" == "true" ]; then
        export SUPERSET_CONFIG=tests.integration_tests.superset_test_config
        export SUPERSET_TESTENV=true
        export SUPERSET__SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@db:5432/superset
    fi
    #
    # Make sure we have dev requirements installed
    #
    if [ -f "${REQUIREMENTS_LOCAL}" ]; then
      echo "Installing local overrides at ${REQUIREMENTS_LOCAL}"
      pip install --no-cache-dir -r "${REQUIREMENTS_LOCAL}"
    else
      echo "Skipping local overrides"
    fi

    #
    # playwright is an optional package - run only if it is installed
    #
    if command -v playwright > /dev/null 2>&1; then
      playwright install-deps
      playwright install chromium
    fi

    case "${1}" in
      worker)
        echo "Starting Celery worker..."
        celery --app=superset.tasks.celery_app:app worker -O fair -l INFO
        ;;
      beat)
        echo "Starting Celery beat..."
        rm -f /tmp/celerybeat.pid
        celery --app=superset.tasks.celery_app:app beat --pidfile /tmp/celerybeat.pid -l INFO -s "${SUPERSET_HOME}"/celerybeat-schedule
        ;;
      app)
        echo "Starting web app (using development server)..."
        flask run -p 8088 --with-threads --reload --debugger --host=0.0.0.0
        ;;
      app-gunicorn)
        echo "Starting web app..."
        /usr/bin/run-server.sh
        ;;
      *)
        echo "Unknown Operation!!!"
        ;;
    esac

  docker-ci.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    /app/docker/docker-init.sh

    # TODO: copy config overrides from ENV vars

    # TODO: run celery in detached state
    export SERVER_THREADS_AMOUNT=8
    # start up the web server

    /usr/bin/run-server.sh
  docker-frontend.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    set -e

    # Packages needed for puppeteer:
    apt update
    apt install -y chromium

    cd /app/superset-frontend
    npm install -f --no-optional --global webpack webpack-cli
    npm install -f --no-optional

    echo "Running frontend"
    npm run dev
  docker-init.sh: |+
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #
    set -e

    #
    # Always install local overrides first
    #
    /app/docker/docker-bootstrap.sh

    STEP_CNT=4

    echo_step() {
    cat <<EOF

    ######################################################################


    Init Step ${1}/${STEP_CNT} [${2}] -- ${3}


    ######################################################################

    EOF
    }
    ADMIN_PASSWORD="admin"
    # If Cypress run – overwrite the password for admin and export env variables
    if [ "$CYPRESS_CONFIG" == "true" ]; then
        ADMIN_PASSWORD="general"
        export SUPERSET_CONFIG=tests.integration_tests.superset_test_config
        export SUPERSET_TESTENV=true
        export SUPERSET__SQLALCHEMY_DATABASE_URI=postgresql+psycopg2://superset:superset@db:5432/superset
    fi
    # Initialize the database
    echo_step "1" "Starting" "Applying DB migrations"
    superset db upgrade
    echo_step "1" "Complete" "Applying DB migrations"

    # Create an admin user
    echo_step "2" "Starting" "Setting up admin user ( admin / $ADMIN_PASSWORD )"
    superset fab create-admin \
                  --username admin \
                  --firstname Superset \
                  --lastname Admin \
                  --email admin@superset.com \
                  --password $ADMIN_PASSWORD
    echo_step "2" "Complete" "Setting up admin user"
    # Create default roles and permissions
    echo_step "3" "Starting" "Setting up roles and perms"
    superset init
    echo_step "3" "Complete" "Setting up roles and perms"

    if [ "$SUPERSET_LOAD_EXAMPLES" = "yes" ]; then
        # Load some data to play with
        echo_step "4" "Starting" "Loading examples"
        # If Cypress run which consumes superset_test_config – load required data for tests
        if [ "$CYPRESS_CONFIG" == "true" ]; then
            superset load_test_users
            superset load_examples --load-test-data
        else
            superset load_examples --force
        fi
        echo_step "4" "Complete" "Loading examples"
    fi

  frontend-mem-nag.sh: |
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one or more
    # contributor license agreements.  See the NOTICE file distributed with
    # this work for additional information regarding copyright ownership.
    # The ASF licenses this file to You under the Apache License, Version 2.0
    # (the "License"); you may not use this file except in compliance with
    # the License.  You may obtain a copy of the License at
    #
    #    http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing, software
    # distributed under the License is distributed on an "AS IS" BASIS,
    # WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
    # See the License for the specific language governing permissions and
    # limitations under the License.
    #

    set -e

    # We need at least 3GB of free mem...
    MIN_MEM_FREE_GB=3
    MIN_MEM_FREE_KB=$(($MIN_MEM_FREE_GB*1000000))

    echo_mem_warn() {
      MEM_FREE_KB=$(awk '/MemFree/ { printf "%s \n", $2 }' /proc/meminfo)
      MEM_FREE_GB=$(awk '/MemFree/ { printf "%s \n", $2/1024/1024 }' /proc/meminfo)

      if [[ "${MEM_FREE_KB}" -lt "${MIN_MEM_FREE_KB}" ]]; then
        cat <<EOF
        ===============================================
        ========  Memory Insufficient Warning =========
        ===============================================

        It looks like you only have ${MEM_FREE_GB}GB of
        memory free. Please increase your Docker
        resources to at least ${MIN_MEM_FREE_GB}GB

        ===============================================
        ========  Memory Insufficient Warning =========
        ===============================================
    EOF
      else
        echo "Memory check Ok [${MEM_FREE_GB}GB free]"
      fi
    }

    # Always nag if they're low on mem...
    echo_mem_warn
  requirements-local.txt: |
    python-keycloak==3.3.0
    WeasyPrint==60.1
  run-server.sh: |+
    #!/usr/bin/env bash
    #
    # Licensed to the Apache Software Foundation (ASF) under one
    # or more contributor license agreements.  See the NOTICE file
    # distributed with this work for additional information
    # regarding copyright ownership.  The ASF licenses this file
    # to you under the Apache License, Version 2.0 (the
    # "License"); you may not use this file except in compliance
    # with the License.  You may obtain a copy of the License at
    #
    # http://www.apache.org/licenses/LICENSE-2.0
    #
    # Unless required by applicable law or agreed to in writing,
    # software distributed under the License is distributed on an
    # "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
    # KIND, either express or implied.  See the License for the
    # specific language governing permissions and limitations
    # under the License.
    #
    HYPHEN_SYMBOL='-'

    gunicorn \
        --bind "${SUPERSET_BIND_ADDRESS:-0.0.0.0}:${SUPERSET_PORT:-8088}" \
        --access-logfile "${ACCESS_LOG_FILE:-$HYPHEN_SYMBOL}" \
        --error-logfile "${ERROR_LOG_FILE:-$HYPHEN_SYMBOL}" \
        --workers ${SERVER_WORKER_AMOUNT:-1} \
        --worker-class ${SERVER_WORKER_CLASS:-gthread} \
        --threads ${SERVER_THREADS_AMOUNT:-20} \
        --timeout ${GUNICORN_TIMEOUT:-60} \
        --keep-alive ${GUNICORN_KEEPALIVE:-2} \
        --max-requests ${WORKER_MAX_REQUESTS:-0} \
        --max-requests-jitter ${WORKER_MAX_REQUESTS_JITTER:-0} \
        --limit-request-line ${SERVER_LIMIT_REQUEST_LINE:-0} \
        --limit-request-field_size ${SERVER_LIMIT_REQUEST_FIELD_SIZE:-0} \
        "${FLASK_APP}"


kind: ConfigMap
metadata:
  name: {{ .Values.file1configmap | quote }}
  namespace: {{ .Values.namespace.name | quote }}

